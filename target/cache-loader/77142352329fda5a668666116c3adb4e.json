{"remainingRequest":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/yesodasanka/GitMinty/ZipMinty/node_modules/ts-loader/index.js??ref--9-3!/Users/yesodasanka/GitMinty/ZipMinty/node_modules/angular-router-loader/src/index.js!/Users/yesodasanka/GitMinty/ZipMinty/node_modules/tslint-loader/index.js!/Users/yesodasanka/GitMinty/ZipMinty/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","dependencies":[{"path":"/Users/yesodasanka/GitMinty/ZipMinty/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","mtime":1545846818659},{"path":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/ts-loader/index.js","mtime":1540965372000},{"path":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/yesodasanka/GitMinty/ZipMinty/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar http_1 = require(\"@angular/common/http\");\nvar core_1 = require(\"@angular/core\");\nvar operators_1 = require(\"rxjs/operators\");\nvar NotificationInterceptor = /** @class */ (function () {\n    function NotificationInterceptor(alertService) {\n        this.alertService = alertService;\n    }\n    NotificationInterceptor.prototype.intercept = function (request, next) {\n        var _this = this;\n        return next.handle(request).pipe(operators_1.tap(function (event) {\n            if (event instanceof http_1.HttpResponse) {\n                var arr = event.headers.keys();\n                var alert_1 = null;\n                arr.forEach(function (entry) {\n                    if (entry.toLowerCase().endsWith('app-alert')) {\n                        alert_1 = event.headers.get(entry);\n                    }\n                });\n                if (alert_1) {\n                    if (typeof alert_1 === 'string') {\n                        _this.alertService.success(alert_1, null, null);\n                    }\n                }\n            }\n        }, function (err) { }));\n    };\n    var _a;\n    NotificationInterceptor = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object])\n    ], NotificationInterceptor);\n    return NotificationInterceptor;\n}());\nexports.NotificationInterceptor = NotificationInterceptor;\n",{"version":3,"file":"/Users/yesodasanka/GitMinty/ZipMinty/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","sourceRoot":"","sources":["/Users/yesodasanka/GitMinty/ZipMinty/node_modules/angular-router-loader/src/index.js!/Users/yesodasanka/GitMinty/ZipMinty/node_modules/tslint-loader/index.js!/Users/yesodasanka/GitMinty/ZipMinty/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts"],"names":[],"mappings":";;;AAAA,2CAA8C;AAC9C,6CAA0G;AAC1G,sCAA2C;AAE3C,4CAAqC;AAGrC;IACE,iCAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,2CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAsBC;QArBC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,eAAG,CACD,UAAC,KAAqB;YACpB,IAAI,KAAK,YAAY,mBAAY,EAAE;gBACjC,IAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjC,IAAI,OAAK,GAAG,IAAI,CAAC;gBACjB,GAAG,CAAC,OAAO,CAAC,UAAA,KAAK;oBACf,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;wBAC7C,OAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBAClC;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,OAAK,EAAE;oBACT,IAAI,OAAO,OAAK,KAAK,QAAQ,EAAE;wBAC7B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC9C;iBACF;aACF;QACH,CAAC,EACD,UAAC,GAAQ,IAAM,CAAC,CACjB,CACF,CAAC;IACJ,CAAC;;IAzBU,uBAAuB;QADnC,iBAAU,EAAE;qEAEuB,6BAAe,oBAAf,6BAAe;OADtC,uBAAuB,CA0BnC;IAAD,8BAAC;CAAA,AA1BD,IA0BC;AA1BY,0DAAuB","sourcesContent":["import { JhiAlertService } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class NotificationInterceptor implements HttpInterceptor {\n  constructor(private alertService: JhiAlertService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap(\n        (event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse) {\n            const arr = event.headers.keys();\n            let alert = null;\n            arr.forEach(entry => {\n              if (entry.toLowerCase().endsWith('app-alert')) {\n                alert = event.headers.get(entry);\n              }\n            });\n            if (alert) {\n              if (typeof alert === 'string') {\n                this.alertService.success(alert, null, null);\n              }\n            }\n          }\n        },\n        (err: any) => {}\n      )\n    );\n  }\n}\n"]}]}